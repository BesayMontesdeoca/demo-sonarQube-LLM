#!groovy

//@Library('functions')_

pipeline {
	agent any // Default Agent

  environment {
      SONAR_SUCCESS = "false"
  }

  
  stages {

    stage('Init') {
    	
      steps {
      	sh 'docker ps'
      }
    }
    
    stage('SonarQube') {
      // Specifies where the entire Pipeline, or a specific stage, will execute in the Jenkins environment depending on where the agent section is placed
    	agent {
      	docker {
        	image 'maven:3.8.6-openjdk-11-slim'
        }
      }
      steps {
      	//catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
        sh 'mvn verify sonar:sonar \
            -Dsonar.projectKey=demo-sonarQube-llm \
            -Dsonar.host.url=http://172.16.236.10:9000 \
            -Dsonar.login=sqp_4feea8ee1d8ff30fe99ea20cd86dbc1f81b416d2'
      }
    }

    stage('LLM Analyzer') {
    	
      steps {
        sh "chmod +x ./LLM.sh"
        sh './LLM.sh'
      }
    }

  }

  post {
    always  {
      sh 'docker logout'
      
    }
    success {
      echo "SUCCESS"
    }
  }
  
}


